plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.6-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'org.roopsai'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}
// build.gradle

// Define a task to copy the necessary properties file based on the environment
tasks.register('copyPropertiesFile', Copy) {
	from "src/main/resources" // Path to your properties files
	into "build/resources/main" // Destination directory
	// Choose the file based on the environment variable or build type
	if (project.hasProperty('env') && project.env == 'prod') {
		include 'application-prod.properties'
	} else {
		include 'application-dev.properties'
	}
}

// Ensure that the copyPropertiesFile task runs before the build
compileJava.dependsOn(copyPropertiesFile)


tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
